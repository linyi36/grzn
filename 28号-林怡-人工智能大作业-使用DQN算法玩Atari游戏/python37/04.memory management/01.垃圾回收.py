# 就像我们生活中会产生垃圾一样，程序在运行过程当中也会产生垃圾
# 程序运行过程中产生的垃圾会影响到程序的运行的运行性能，所以这些垃圾必须被及时清理
# 没用的东西就是垃圾
# 在程序中没有被引用的对象就是垃圾,这种垃圾对象过多以后就会影响到程序的运行性能
# 所以我们必须及时进行垃圾回收(也就是将对象从内存中删除)
# python具有自动的垃圾回收机制,它会将这些没有被引用的对象删除,所有我们不用手动处理垃圾

'''
怎么查看python程序的内存占用和细节
'''


class A:
    def __init__(self):
        self.name = 'A类'

    '''del是一个特殊方法,它会在垃圾回收前被调用'''

    def __del__(self):
        print("A创建的实例被删除了!")
        pass


a = A()
b = a
'''下面4行,2*2种方式可以调用__del__'''
# del a #调用__del__说明对象被删了
a = None  #调用__del__说明对象被删了
# del b #不会调用__del__说明对象没被删
b = None
input('回车键退出...')
